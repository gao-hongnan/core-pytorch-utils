version: 2.1

# -------------------------------------------------------- #
#              Environments to run the jobs in             #
# -------------------------------------------------------- #
cpu: &cpu
  machine:
    image: ubuntu-2004:202107-02
  resource_class: medium

gpu: &gpu
  machine:
    image: ubuntu-1604-cuda-11.1:202012-01
  resource_class: gpu.nvidia.small

version_parameters: &version_parameters
  parameters:
    pytorch_version:
      type: string
    torchvision_version:
      type: string
    pytorch_index:
      type: string
      default: "https://download.pytorch.org/whl/torch_stable.html"
    python_version:
      type: string
      default: 3.6.8

  environment:
    PYTORCH_VERSION: << parameters.pytorch_version >>
    TORCHVISION_VERSION: << parameters.torchvision_version >>
    PYTORCH_INDEX: << parameters.pytorch_index >>
    PYTHON_VERSION: << parameters.python_version >>

orbs:
  codecov: codecov/codecov@3.0.0

# -------------------------------------------------------- #
#                    Re-usable commands                    #
# -------------------------------------------------------- #
install_python: &install_python
  - run:
      name: Install Python
      working_directory: ~/
      command: |
        # upgrade pyenv
        cd /opt/circleci/.pyenv/plugins/python-build/../.. && git pull && cd -
        pyenv install -s $PYTHON_VERSION
        pyenv global $PYTHON_VERSION
        python --version
        which python
        pip install --upgrade pip

install_dependencies: &install_dependencies
  - run:
      name: Install Dependencies
      command: |
        # disable crash coredump, so unittests fail fast
        sudo systemctl stop apport.service
        # use a lower version of setuptools to prevent potential bugs
        pip install setuptools==59.5.0
        # install the specified versions of torch and torchvision
        pip install torch==$PYTORCH_VERSION torchvision==$TORCHVISION_VERSION -f $PYTORCH_INDEX
        python -c 'import torch; print("CUDA:", torch.cuda.is_available())'
        # install dependencies of core-pytorch-utils
        pip install -r requirements.txt
        # install dependencies of unittests
        pip install -r tests/requirements.txt
        pip install pytest coverage

run_unittests: &run_unittests
  - run:
      name: Run Unit Tests
      command: |
        python -m coverage run --branch --source cpu -m pytest tests/
        # export xml files for Codecov
        python -m coverage xml
        # export html files for CircleCI artifacts
        python -m coverage html
        # print coverage in console
        python -m coverage report -m

upload_to_circleci: &upload_to_circleci
  - store_artifacts:
      path: htmlcov

upload_to_codecov: &upload_to_codecov
  - codecov/upload:
      file: coverage.xml

# -------------------------------------------------------- #
#                         Run jobs                         #
# -------------------------------------------------------- #
jobs:
  cpu_tests:
    <<: *cpu
    <<: *version_parameters
    steps:
      - checkout
      - <<: *install_python
      - <<: *install_dependencies
      - <<: *run_unittests
      # save unittest results to CircleCI and Codecov
      - <<: *upload_to_circleci
      - <<: *upload_to_codecov

  gpu_tests:
    <<: *gpu
    <<: *version_parameters
    steps:
      - checkout
      - <<: *install_python
      - <<: *install_dependencies
      - <<: *run_unittests
      - <<: *upload_to_circleci
      - <<: *upload_to_codecov

workflows:
  version: 2
  regular_test:
    jobs:
      - cpu_tests:
          name: cpu_tests_pytorch1.10
          pytorch_version: 1.10.0+cpu
          torchvision_version: 0.11.1+cpu
      - gpu_tests:
          name: gpu_tests_pytorch1.10
          pytorch_version: 1.10.0+cu111
          torchvision_version: 0.11.1+cu111